{"version":3,"sources":["logo.svg","notes.js","scales.js","App.js","reportWebVitals.js","index.js"],"names":["notes","c","g","d","a","e","b","fsharp","pentatonic","App","React","showScale","setShowScale","selected","setSelected","className","src","logo","alt","onClick","console","log","JSON","stringify","Object","keys","scales","map","scale","disabled","guitarstring","fret","f","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAAe,MAA0B,iCCqE1BA,G,MArED,CAGV,CACA,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,KAGrD,CACI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,KAGrD,CACI,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,KAGrD,CACI,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,KAGrD,CACI,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,KAGrD,CACI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,KAAK,OCxBtC,GACXC,EAAE,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC3BC,EAAE,CAAC,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAC5BC,EAAE,CAAC,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,KAC7BC,EAAE,CAAC,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI,KAC9BC,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAC/BC,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,KAChCC,OAAO,CAAC,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KACpCC,WAAW,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,M,OCoDrBC,MAtDf,WACE,MAAkCC,YAAe,GAAjD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,WAAe,KAA/C,mBAAOG,EAAP,KAAiBC,EAAjB,KAYA,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,uCAGA,yBAAQC,QAlBM,WAClBP,GAAcD,GACdS,QAAQC,IAAIV,IAgBR,wBAEeW,KAAKC,UAAUZ,MAC7Ba,OAAOC,KAAKC,GAAQC,KAAI,SAACC,GAAD,OAEzB,wBAAQC,SAAUD,IAAQf,EAAUM,QAAS,kBAAIL,EAAYc,IAA7D,SAAsEA,OAEtE,gCAID5B,EAAM2B,KAAI,SAACG,GAEX,OACE,6BAEIA,EAAaH,KAAI,SAACI,GAChB,OACE,oBAAIhB,UAAWJ,GAhCTqB,EAgCmCD,EA5BnDL,EAAOb,GAAUoB,SAASD,GAAG,SAAS,YA4BmB,WAA/C,SACGD,IAjCE,IAACC,kBCDRE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a7c777e0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const notes = [\n// STANDARD TUNING ASSUMED\n// first string little e\n    [\n    'F','F#','G','G#','A','A#','B','C','C#','D','D#','E'\n],\n// second string B\n[\n    'C','C#','D','D#','E','F','F#','G','G#','A','A#','B'\n],\n// third sring G\n[\n    'G#','A','A#','B','C','C#','D','D#','E','F','F#','G'\n],\n// fourth string D\n[\n    'D#','E','F','F#','G','G#','A','A#','B','C','C#','D'\n],\n// fifth string A\n[\n    'A#','B','C','C#','D','D#','E','F','F#','G','G#','A'\n],\n// six string big E\n[\n    'F','F#','G','G#','A','A#','B','C','C#','D','D#','E'\n],\n];\n\nexport const cscale = [\n    // notes in the scale of C Major\n    'C','D','E','F','G','A','B'\n];\n\nconst gscale = [\n    //notes in the scale of G Major\n   'C','D','E','F#','G','A','B'\n];\n\nconst dscale = [\n    // notes in scale of D major\n    'C#','D','E','F#','G','A','B'\n];\n\nconst ascale = [\n    // notes in scale of A major\n    'C#','D','E','F#','G#','A','B'\n];\n\nconst escale = [\n    // notes in scale of E major\n    'C#','D#','E','F#','G#','A','B'\n];\n\nconst bscale = [\n    // notes in scale of B major\n    'C#','D#','E','F#','G#','A#','B'\n];\n\nconst fsharpscale = [\n    // notes in scale of F# major\n    'C#','D#','F','F#','G#','A','B'\n];\n\nconst pentatonicscale = [\n    // notes of the pentatonic scale\n    'C','D','E','G','A','C'\n];\n \n\nexport default notes;\n","export default {\n    c:['C','D','E','F','G','A','B'], \n    g:['C','D','E','F#','G','A','B'], \n    d:['C#','D','E','F#','G','A','B'], \n    a:['C#','D','E','F#','G#','A','B'], \n    e:['C#','D#','E','F#','G#','A','B'], \n    b:['C#','D#','E','F#','G#','A#','B'], \n    fsharp:['C#','D#','F','F#','G#','A','B'], \n    pentatonic:['C','D','E','G','A','C']\n}","import * as React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport notes from './notes';\nimport scales from './scales';\n\nfunction App() {\n  const [showScale, setShowScale] = React.useState(false);\n  const [selected, setSelected] = React.useState(\"c\");\n  const toggleScale = () => {\n    setShowScale(!showScale);\n    console.log(showScale)\n  }\nconst determineActive=(f) => {\n// is the note I'm looking at in cscale, if it is return the string active else return inactive\n// if showScale = false, it should always be inactive\n// console.log(cscale.includes(f))\nreturn scales[selected].includes(f)?'active':'inactive';\n}\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          fretty\n        </p>\n        <button onClick={\n          toggleScale\n        } >showScale: {JSON.stringify(showScale)}</button>\n        {Object.keys(scales).map((scale)=> (\n        \n        <button disabled={scale===selected} onClick={()=>setSelected(scale)}>{scale}</button>))}\n      {/* move all scales and the button will select which scales we want hightlighted*/}\n        <table>\n      {\n        // computation here\n       // JSON.stringify(notes)\n       notes.map((guitarstring) => {\n       //return JSON.stringify(guitarstring)\n       return (\n         <tr>\n           {\n             guitarstring.map((fret)=> {\n               return (\n                 <td className={showScale?determineActive(fret):'inactive'}>\n                   {fret}\n                 </td>\n               )\n             })\n           }\n         </tr>\n       )\n       })\n      }</table>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}